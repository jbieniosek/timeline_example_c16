{"version":3,"sources":["components/Timestamp.js","components/TimelineEvent.js","components/Timeline.js","App.js","reportWebVitals.js","index.js"],"names":["Timestamp","props","time","moment","absolute","format","relative","fromNow","title","TimelineEvent","person","status","timestamp","className","Timeline","events","eventComponents","i","length","push","App","console","log","timelineData","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"shDAUeA,EARG,SAACC,GACjB,IAAMC,EAAOC,IAAOF,EAAMC,MACpBE,EAAWF,EAAKG,OAAO,2BACvBC,EAAWJ,EAAKK,UAEtB,OAAO,sBAAMC,MAAOJ,EAAb,SAAwBE,KCOlBG,EAXO,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,UAEpC,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAU,eAAf,SAA+BH,IAC/B,qBAAKG,UAAU,aAAf,SAA4B,cAAC,EAAD,CAAWX,KAAMU,MAC7C,qBAAKC,UAAU,eAAf,SAA+BF,QCY5BG,EAlBE,SAACb,GAId,IAFA,IAAIc,EAASd,EAAMc,OACfC,EAAkB,GACdC,EAAI,EAAGA,EAAIF,EAAOG,OAAQD,IAC9BD,EAAgBG,KAAK,cAAC,EAAD,CAAeT,OAAQK,EAAOE,GAAGP,OAAQC,OAAQI,EAAOE,GAAGN,OAAQC,UAAWG,EAAOE,GAAGL,aAIjH,OACI,yBAASC,UAAU,WAAnB,SACKG,KCKEI,MAdf,WAIE,OAHAC,QAAQC,IAAI,+BAAgCC,GAC5CF,QAAQC,IAAI,wDAGV,eAAC,IAAME,SAAP,WACI,wBAAQX,UAAU,aAAlB,SACI,oBAAIA,UAAU,YAAd,SAA2BU,EAAab,WAE5C,sBAAMG,UAAU,WAAhB,SAA2B,cAAC,EAAD,CAAUE,OAAQQ,EAAaR,eCFnDU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.11f2926a.chunk.js","sourcesContent":["import moment from 'moment';\n\nconst Timestamp = (props) => {\n  const time = moment(props.time);\n  const absolute = time.format('MMMM Do YYYY, h:mm:ss a');\n  const relative = time.fromNow();\n\n  return <span title={absolute}>{relative}</span>;\n};\n\nexport default Timestamp;","import './TimelineEvent.css';\nimport Timestamp from './Timestamp';\n\nconst TimelineEvent = ({person, status, timestamp}) => {\n\n    return(\n        <div className=\"timeline-event\">\n            <div className=\"event-person\">{person}</div>\n            <div className=\"event-time\"><Timestamp time={timestamp} /></div>\n            <div className=\"event-status\">{status}</div>\n        </div>\n    )\n};\n\nexport default TimelineEvent;","import './Timeline.css';\nimport TimelineEvent from './TimelineEvent';\n\nconst Timeline = (props) => {\n\n    let events = props.events;\n    let eventComponents = []\n    for(let i = 0; i < events.length; i++) {\n        eventComponents.push(<TimelineEvent person={events[i].person} status={events[i].status} timestamp={events[i].timestamp}/>);\n    }\n\n\n    return(\n        <section className=\"timeline\">\n            {eventComponents}\n        </section>\n    );\n\n\n};\n\nexport default Timeline;","import './App.css';\nimport React from 'react';\nimport timelineData from './data/timeline.json';\nimport Timeline from './components/Timeline';\n\nfunction App() {\n  console.log('The value of timelineData is', timelineData);\n  console.log('We should use timelineData in our project somehow...');\n\n  return (\n    <React.Fragment>\n        <header className=\"App-header\">\n            <h1 className=\"App-title\">{timelineData.person}</h1> \n        </header>\n        <main className=\"App-main\"><Timeline events={timelineData.events} /></main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}